/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.ControladorAgendamiento;
import javax.swing.DefaultListModel;

/**
 *
 * @author nicoo
 */
public class VistaAgendamiento  extends javax.swing.JFrame{
    
    private ControladorAgendamiento cAgenda;
    private VistaConfirmacion vConfirmacion;
    
    /**
     * Creates new form VistaAgendamientoHoras
     */
    public VistaAgendamiento() {
        initComponents();
    }

    public VistaAgendamiento(ControladorAgendamiento aThis) {
        initComponents();
        cAgenda = aThis;
        ComboBoxPorfesionales.setEnabled(false);
        ListaHorarios.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BotonVolver = new javax.swing.JButton();
        BotonAgendarHorario = new javax.swing.JButton();
        PanelProfesional = new javax.swing.JPanel();
        ComboBoxPorfesionales = new javax.swing.JComboBox();
        labelSelProf = new javax.swing.JLabel();
        labelInfoProf = new javax.swing.JLabel();
        PanelPaciente = new javax.swing.JPanel();
        labelHorario1 = new javax.swing.JLabel();
        labelRUT = new javax.swing.JLabel();
        CampoRut = new javax.swing.JTextField();
        labelPrioridad = new javax.swing.JLabel();
        BotonBuscarPaciente = new javax.swing.JButton();
        labelNombrePaciente = new javax.swing.JLabel();
        PanelHorario1 = new javax.swing.JPanel();
        labelHorario2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListaHorarios = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        BotonVolver.setText("Volver");
        BotonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonVolverPressedMM(evt);
            }
        });

        BotonAgendarHorario.setText("Agendar bloque");
        BotonAgendarHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAgendarHorarioPressedMM(evt);
            }
        });

        PanelProfesional.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ComboBoxPorfesionales.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Omar Matus", "Rodrigo Ram√≠rez", "Carlos Espinoza" }));
        ComboBoxPorfesionales.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxPorfesionalesItemStateChanged(evt);
            }
        });

        labelSelProf.setText("Seleccione profesional");

        labelInfoProf.setText("Profesional");

        javax.swing.GroupLayout PanelProfesionalLayout = new javax.swing.GroupLayout(PanelProfesional);
        PanelProfesional.setLayout(PanelProfesionalLayout);
        PanelProfesionalLayout.setHorizontalGroup(
            PanelProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProfesionalLayout.createSequentialGroup()
                .addGroup(PanelProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelProfesionalLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(labelInfoProf))
                    .addGroup(PanelProfesionalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ComboBoxPorfesionales, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelProfesionalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelSelProf)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        PanelProfesionalLayout.setVerticalGroup(
            PanelProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProfesionalLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(labelInfoProf)
                .addGap(22, 22, 22)
                .addComponent(labelSelProf)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ComboBoxPorfesionales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PanelPaciente.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        labelHorario1.setText("Paciente");

        labelRUT.setText("RUT:");

        labelPrioridad.setText("Prioridad: ");

        BotonBuscarPaciente.setText("Buscar paciente");
        BotonBuscarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBuscarPacientePressedMM(evt);
            }
        });

        labelNombrePaciente.setText("Nombre:");

        javax.swing.GroupLayout PanelPacienteLayout = new javax.swing.GroupLayout(PanelPaciente);
        PanelPaciente.setLayout(PanelPacienteLayout);
        PanelPacienteLayout.setHorizontalGroup(
            PanelPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPacienteLayout.createSequentialGroup()
                .addComponent(labelHorario1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(PanelPacienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelPacienteLayout.createSequentialGroup()
                        .addComponent(labelRUT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CampoRut, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(BotonBuscarPaciente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelNombrePaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelPrioridad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        PanelPacienteLayout.setVerticalGroup(
            PanelPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPacienteLayout.createSequentialGroup()
                .addComponent(labelHorario1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelRUT)
                    .addComponent(CampoRut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNombrePaciente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(PanelPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonBuscarPaciente)
                    .addComponent(labelPrioridad))
                .addContainerGap())
        );

        PanelHorario1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        labelHorario2.setText("Horario");

        ListaHorarios.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Lunes 04/07 - 9:40", "Lunes 11/07 - 12:30" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        ListaHorarios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(ListaHorarios);

        javax.swing.GroupLayout PanelHorario1Layout = new javax.swing.GroupLayout(PanelHorario1);
        PanelHorario1.setLayout(PanelHorario1Layout);
        PanelHorario1Layout.setHorizontalGroup(
            PanelHorario1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHorario1Layout.createSequentialGroup()
                .addComponent(labelHorario2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PanelHorario1Layout.setVerticalGroup(
            PanelHorario1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHorario1Layout.createSequentialGroup()
                .addGroup(PanelHorario1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelHorario1Layout.createSequentialGroup()
                        .addComponent(labelHorario2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(PanelHorario1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BotonAgendarHorario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BotonVolver))
                    .addComponent(PanelPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(PanelProfesional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PanelHorario1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelHorario1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelProfesional, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonAgendarHorario)
                    .addComponent(BotonVolver))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonVolverPressedMM(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonVolverPressedMM
        // TODO add your handling code here:
        cAgenda.volver();
    }//GEN-LAST:event_BotonVolverPressedMM

    private void BotonBuscarPacientePressedMM(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBuscarPacientePressedMM
        // TODO add your handling code here:
        cAgenda.buscarPaciente();
    }//GEN-LAST:event_BotonBuscarPacientePressedMM

    private void ComboBoxPorfesionalesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxPorfesionalesItemStateChanged
        // TODO add your handling code here:
        cAgenda.cambioDeProfesional();
    }//GEN-LAST:event_ComboBoxPorfesionalesItemStateChanged

    private void BotonAgendarHorarioPressedMM(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAgendarHorarioPressedMM
        // TODO add your handling code here:
        
    }//GEN-LAST:event_BotonAgendarHorarioPressedMM
    
    public VistaConfirmacion getVistaConfirmacion(){
        return this.vConfirmacion;
    }
    public String demeRutCampoRut(){
        return CampoRut.getText();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonAgendarHorario;
    private javax.swing.JButton BotonBuscarPaciente;
    private javax.swing.JButton BotonVolver;
    private javax.swing.JTextField CampoRut;
    private javax.swing.JComboBox ComboBoxPorfesionales;
    private javax.swing.JList ListaHorarios;
    private javax.swing.JPanel PanelHorario1;
    private javax.swing.JPanel PanelPaciente;
    private javax.swing.JPanel PanelProfesional;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelHorario1;
    private javax.swing.JLabel labelHorario2;
    private javax.swing.JLabel labelInfoProf;
    private javax.swing.JLabel labelNombrePaciente;
    private javax.swing.JLabel labelPrioridad;
    private javax.swing.JLabel labelRUT;
    private javax.swing.JLabel labelSelProf;
    // End of variables declaration//GEN-END:variables

    public void MuestreRutInvalidoFM() {
        vConfirmacion = new VistaConfirmacion(this, true, "Rut ingresado inv√°lido");
        if(vConfirmacion.demeEstadoQM()){
            vConfirmacion.dispose();
        }else{
            vConfirmacion.dispose();
        }
    }

    public void MuestreNombrePacienteFM(String string) {
        labelNombrePaciente.setText(labelNombrePaciente.getText()+string);
    }

    public void MuestrePrioridadFM(int prioridad) {
        labelPrioridad.setText(labelPrioridad.getText()+String.valueOf(prioridad));
    }

    public void MuestreDeshabilitarPacienteFM() {
        //Desactiva los controles para paciente
        BotonBuscarPaciente.setEnabled(false);
        CampoRut.setEnabled(false);
        //Se activan los controles para profesionales
        ComboBoxPorfesionales.setEnabled(true);
    }

    public String demeProfesionalSeleccionadoQM() {
        return (String) ComboBoxPorfesionales.getSelectedItem();
    }

    public void MostrarHorariosFM(DefaultListModel modeloHorarios) {
        ListaHorarios.setModel(modeloHorarios);
        ListaHorarios.setEnabled(true);
    }
}
